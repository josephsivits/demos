// Driver File

#include "Array.cpp"
using namespace std;

template<typename T, typename U>
bool typeCompare(T arr, U arr2)
{
	return (typeid(arr) == typeid(arr2))? true : false;
}

int main()
{
	Array<int> arrInt(8);
	Array<double> arrDouble(5);

	cout << "Generating integer array of size " << arrInt.getSize() << "...\n";
	arrInt.generateInt();

	cout << "Generating double array of size " << arrDouble.getSize() << "...\n";
	arrDouble.generateDouble();

	cout << "\nPrinting integer array from positions 2 to 4 inclusive:\n";
	arrInt.printArray(2,4);

	cout << "\nPrinting entire integer array:\n";
	arrInt.printArray();

	cout << "\nPrinting entire double array:\n";
	arrDouble.printArray();

	cout << "\nAverage of integer array: " << arrInt.printAverage();
	cout << "\nAverage of double array: " << arrDouble.printAverage();

	
//arrInt.typeCompare(arrDouble);
	cout << endl << typeCompare(arrInt, arrDouble);
	


	return 0;
}
